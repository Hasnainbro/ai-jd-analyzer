"use client"

import { motion } from "framer-motion"
import { Download, CheckCircle2, HelpCircle, Lightbulb } from "lucide-react"
import { Button } from "./ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "./ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "./ui/tabs"

export default function PrepGuide({ result }) {
  const container = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  }

  const item = {
    hidden: { opacity: 0, y: 20 },
    show: { opacity: 1, y: 0 },
  }

  const handleDownload = () => {
    // Create text content for download
    const content = `
# Interview Preparation Guide

## Job Summary
${result.summary}

## Key Requirements
${result.keyRequirements.map((req) => `- ${req}`).join("\n")}

## Potential Interview Questions
${result.potentialQuestions.map((q) => `- ${q}`).join("\n")}

## Preparation Tips
${result.preparationTips.map((tip) => `- ${tip}`).join("\n")}

Generated by InterviewPrep AI
`

    // Create blob and download
    const blob = new Blob([content], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = "interview-prep-guide.md"
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <Card className="border-2 shadow-lg overflow-hidden">
      <CardHeader className="bg-primary/5">
        <CardTitle className="text-2xl">Your Interview Preparation Guide</CardTitle>
        <CardDescription>
          Based on the job description analysis, here's your personalized preparation guide
        </CardDescription>
      </CardHeader>
      <CardContent className="p-6">
        <Tabs defaultValue="summary" className="w-full">
          <TabsList className="grid w-full grid-cols-4 mb-8">
            <TabsTrigger value="summary">Summary</TabsTrigger>
            <TabsTrigger value="requirements">Requirements</TabsTrigger>
            <TabsTrigger value="questions">Questions</TabsTrigger>
            <TabsTrigger value="tips">Prep Tips</TabsTrigger>
          </TabsList>

          <TabsContent value="summary" className="mt-0">
            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className="space-y-4">
              <h3 className="text-lg font-medium">Job Description Summary</h3>
              <div className="bg-muted/50 p-4 rounded-lg">
                <p>{result.summary}</p>
              </div>
            </motion.div>
          </TabsContent>

          <TabsContent value="requirements" className="mt-0">
            <motion.ul variants={container} initial="hidden" animate="show" className="space-y-3">
              <h3 className="text-lg font-medium mb-4">Key Requirements</h3>
              {result.keyRequirements.map((requirement, index) => (
                <motion.li key={index} variants={item} className="flex items-start gap-3 bg-muted/30 p-3 rounded-md">
                  <CheckCircle2 className="h-5 w-5 text-primary mt-0.5 flex-shrink-0" />
                  <span>{requirement}</span>
                </motion.li>
              ))}
            </motion.ul>
          </TabsContent>

          <TabsContent value="questions" className="mt-0">
            <motion.ul variants={container} initial="hidden" animate="show" className="space-y-4">
              <h3 className="text-lg font-medium mb-4">Potential Interview Questions</h3>
              {result.potentialQuestions.map((question, index) => (
                <motion.li key={index} variants={item} className="flex items-start gap-3 bg-muted/30 p-3 rounded-md">
                  <HelpCircle className="h-5 w-5 text-primary mt-0.5 flex-shrink-0" />
                  <span>{question}</span>
                </motion.li>
              ))}
            </motion.ul>
          </TabsContent>

          <TabsContent value="tips" className="mt-0">
            <motion.ul variants={container} initial="hidden" animate="show" className="space-y-3">
              <h3 className="text-lg font-medium mb-4">Preparation Tips</h3>
              {result.preparationTips.map((tip, index) => (
                <motion.li key={index} variants={item} className="flex items-start gap-3 bg-muted/30 p-3 rounded-md">
                  <Lightbulb className="h-5 w-5 text-primary mt-0.5 flex-shrink-0" />
                  <span>{tip}</span>
                </motion.li>
              ))}
            </motion.ul>
          </TabsContent>
        </Tabs>
      </CardContent>
      <CardFooter className="bg-muted/20 flex justify-end p-4">
        <Button onClick={handleDownload} className="gap-2">
          <Download className="h-4 w-4" />
          Download Guide
        </Button>
      </CardFooter>
    </Card>
  )
}
